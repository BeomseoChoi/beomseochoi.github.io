<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="https://beomseochoi.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://beomseochoi.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-05-24T05:04:23+00:00</updated><id>https://beomseochoi.github.io/feed.xml</id><title type="html">blank</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">Working Holiday (5)</title><link href="https://beomseochoi.github.io/blog/2025/WorkingHolidy_5/" rel="alternate" type="text/html" title="Working Holiday (5)"/><published>2025-05-24T02:11:00+00:00</published><updated>2025-05-24T02:11:00+00:00</updated><id>https://beomseochoi.github.io/blog/2025/WorkingHolidy_5</id><content type="html" xml:base="https://beomseochoi.github.io/blog/2025/WorkingHolidy_5/"><![CDATA[<h2 id="호주에-온-지-7일차">호주에 온 지 7일차</h2> <p>호주에서 벌써 일주일이 흘렀다. 일주일동안 수 많은 퀘스트를 끝냈고, 일부는 진행 중이며 지금 당장 컨트롤 할 수 없는 상태다. 유심 개통, 은행 계좌 개설, TFN 신청, RSA 자격증 취득, 쉐어하우스 및 일 구하기 등 많은 일이 있었다. 호주에 도착하고 일주일 간 있었던 일을 요약해보고자 한다.</p> <h3 id="공항-도착">공항 도착</h3> <p>호주에 도착한 2025년 5월 18일 일요일. 호주 공항에 도착하고 입국 심사를 통과하니 바로 OPTUS(호주 통신사 중 하나)가 보였다. 나는 한국에서부터 OPTUS를 가입하려고 했다. OPTUS가 호주에서 유명한 회사라는 이유 때문이다. 호주에 혼자 떨어진 나에게 인터넷은 매우 소중하고 중요한 존재가 됐다. 한국에서는 스마트폰 배터리가 다 떨어져도 살아갈 수 있었다. 하지만 호주에 대해 아무것도 모르는, 호주 땅을 처음 밟아본 나는 인터넷 없이 호주에서 살아가기란 불가능에 가깝다.</p> <p>OPTUS 매장에 가니 워킹홀리데이와 학생 비자는 할인 중이라는 팻말이 보였다. 딱봐도 상술같았다. 아무것도 모르는 외국인 상대로 장사하는 것처럼 보였다. 최소 3개월 유지 조건 하에, 90GB 데이터를 월 30불에 판매하고 있었다. 유심 조건을 보고 든 생각은, 1. 내가 저 많은 양의 데이터를 다 사용할 수 있을까? 2. 호주도 Wifi가 어느정도 깔려 있지 않을까? 이다. 게다가 3개월 유지라는 조건이 마음에 걸렸다. 왜 3개월 유지 조건을 만들어놨을까. 상술인걸 알고 다른 유심으로 갈아타지 못하게 3개월간 묶어두는 거라고 생각했다. 3개월은 묶어놔야 월 120GB를 줘도 돈이 되나보다. 그래서 유지조건 없는 월 90GB에 45불 유심을 구매했다. 호주에 온지 일주일이 된 지금, 3GB를 썼다. 백패커스 와이파이 덕분에 많이 아낀 것도 있지만 쉐어하우스에 가서도 와이파이가 된다. 한국에서도 집 와이파이 / 6GB + 400kbps 유심을 사용했으니 다음 달 부터는 유심 데이터를 줄여야 겠다.</p> <p>유심을 구매하고 우버를 불러서 예약한 백패커스로 향했다. 우버 기사님이 이것 저것 말 걸어줘서 좋았다. 어느 나라에서 왔는지, 놀러 온건지, 혼자 온건지 등 각종 질문을 받았다. 기사님이 해주신 말씀 중 가장 좋았던건 영어 괜찮게 한다고 말해준거다. 사실 이전부터 어느정도는 알고 있었다. 돈 버는 영어는 몰라도, 돈 쓰는 영어는 충분히 하겠다는 걸. 내가 상대방의 말을 알아듣기는 어렵지만, 내가 하고 싶은 말은 거의 막힘없이 해내왔다.</p> <h3 id="백패커스-체크인-전">백패커스 체크인 전</h3> <p>백패커스에 도착하고 체크인까지 4시간 넘게 남은 상태였다. 그래서 가방을 맡기고 브리즈번 시티를 걸어다녔다. 내가 앞으로 가야 할 은행, 도서관, 메인 거리 등 길을 뚫어놨다. 이때 스트릿 개념을 좀 익혀놨다. 한국에서는 도로명 주소를 말하지 않는 이상 ‘어느 길’에 있다고 말하지 않는다. 그런데 외국은 ‘어느 길’에 있다고 말하는 게 상당히 자연스럽고 익숙한 것같다. 그래서 내가 다니는 길이 무슨 스트릿인지 외워놨고, 목적지까지 가려면 어느 스트릿에서 어느 스트릿으로, 그리고 다음에 어느 스트릿으로 가야하는지, 이런 식으로 스트릿에 익숙해지기 위해 노력했다.</p> <p>체크인까지 할 게 없어서 호주의 버거킹인 ‘헝그리 잭스’에 갔다. 이때 호주 레스토랑 물가를 체감했다. 햄버거 세트 미디움 사이즈가 15불이나 한다. 한국에선 만원 언저리면 먹었을텐데 호주와서 0.5배를 더 주고 먹어야 한다는 게 햄버거를 좋아하는 나로썬 참 아쉬웠다. 하지만 레스토랑 가격은 매우 비싸지만 마트에서 파는 식재료 가격은 매우 저렴하다. 특히 소고기 한 두 덩이가 8불인걸 보고 눈 돌아갔다.</p> <h3 id="백패커스-체크인-후">백패커스 체크인 후</h3> <p>체크인 시간에 맞춰서 숙소로 돌아갔다. 운 좋게 6인실에 한 명만 입실한 상태였고 나는 2층 침대에서 1층 자리를 선점할 수 있었다. 군대 훈련소에서 2층 자리를 써봤는데 정말 불편하다. 화장실 하나 가는데 사다리를 타야하고 침대에 의자처럼 앉지 못한다. 가능하긴 하지만 위험하다. 이후 다른 사람들도 룸에 들어왔는데, 다들 체격이 너무 좋아서 나도 모르게 움츠러들었다. 조금은 무서웠지만 사실 다들 착한 사람들이었다. 지금까지 만난 사람들이 웬만하면 다 친절했다. Sorry는 기본으로 탑재하고 있었고, 내 생각에 이정도면 착한 사람이라고 생각한다.</p> <p>짐을 풀어놓고 레쥬메를 작성하러 백패커스 내에 있는 작업실로 올라갔다. 이 공간에서는 다들 노트북이나 패드를 가져와서 일하거나 공부를 한다. 나도 노트북을 가지고 급하게 레쥬메를 만들었다. 행정병이었기에 양식 정도는 금방 카피할 수 있었기 때문에, 인터넷에서 레쥬메 샘플을 보고 금방 따라 만들었다. 사실 굉장히 심플해서 어려울 것도 없었다.</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-05-24-WorkingHolidy_5/resume-480.webp 480w,/assets/img/2025-05-24-WorkingHolidy_5/resume-800.webp 800w,/assets/img/2025-05-24-WorkingHolidy_5/resume-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-05-24-WorkingHolidy_5/resume.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h3 id="계좌-개설-오픈런">계좌 개설 오픈런</h3> <p>2025년 5월 19일, 월요일이 됐다. 주말에 은행이 열지 않기 때문에 계좌 개설이 불가능했다. 그래서 평일에 은행 계좌를 개설하러 가야 했다. 나는 commonwealth 은행 계좌를 만들기 위해 한국에서 호주 도착 2주전에 미리 신청을 해놨고, welcome letter, 여권, 비자 서류를 들고 commonwealth 은행에 찾아갔다. 인터넷에 올라온 정보로는, 지점마다 하루에 개설 가능한 계좌에 제한이 있다고 해서 아침 일찍 서둘렀다. 은행이 9시 30분에 열리는데, 1시간 전인 8시 30분에 도착했다. 나 말곤 아무도 없었다. 내가 도착하자마자 몇 분 안되어 다른 두 명이 도착했는데 그 사람들도 한국인이었다. 한국인만 급하지 또.</p> <p>잠을 많이 못자서 은행 안에서 계속 졸았다. 사실 비행기에서도 제대로 못잤고, 백패커스에서도 저녁 일찍 잠을 자서 새벽동안 깨어 있었다. 피곤해서 졸던 중, 어디선가 내 이름 비슷하게 부르는 소리가 들렸다. 처음엔 ‘연서’로 들었는데 알고보니 나를 찾는 거였다. 나는 계좌를 만들었고 카드까지 받을 수 있었다.</p> <h3 id="rsa-responsible-service-of-alcohol-자격증-취득">RSA (Responsible Service of Alcohol) 자격증 취득</h3> <p>호주에서 주류를 취급하는 레스토랑에서 일하기 위해서는 RSA 자격증을 소지해야 한다. 어려운 자격증은 아니라서 금방 취득하는데 이게 상당히 귀찮다. 총 17개의 레슨이 있고 레슨마다 퀴즈가 있다. 퀴즈를 틀리면 해당 레슨의 첫 퀴즈부터 다시 풀어야한다. 졸린 상태로 겨우 레슨 17의 퀴즈까지 다 풀었다. 모두 다 풀었다고 생각했지만, 상황극 문제가 남아있었다. 상황극 문제란, 내가 주류를 취급하는 레스토랑의 바탠더 내지는 스태프가 되어 취객이나 미성년자를 대응하는 문제다. 상황이 주어지고 내가 무엇을 해야하는지 나온다. 그 요구 조건에 맞추어 스크립트를 작성하고 녹화해서 업로드한다. 그런데 너무 피곤해서 다음날 업로드 했고, 모래에 RSA에 합격했다는 메일을 받았다.</p> <h3 id="tfn-tax-file-number-신청">TFN (Tax File Number) 신청</h3> <p>호주에서 일하기 위해서는 TFN을 소지하고 있어야 한다. TFN이란 세금 납부를 위한 개인 번호다. 은행 계좌 개설과 동시에 TFN을 신청하려고 했는데 우편 주소를 백패커스로 하기 싫어서 미뤄놨었다. 그런데 가능한 빨리 신청해두고 나중에 변경해야겠다는 생각에 백패커스를 주소로 신청해놨다.</p> <h3 id="브리즈번-도서관-영어-모임">브리즈번 도서관 영어 모임</h3> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-05-24-WorkingHolidy_5/brisbane_library_english_exchange-480.webp 480w,/assets/img/2025-05-24-WorkingHolidy_5/brisbane_library_english_exchange-800.webp 800w,/assets/img/2025-05-24-WorkingHolidy_5/brisbane_library_english_exchange-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-05-24-WorkingHolidy_5/brisbane_library_english_exchange.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>브리즈번 Queen st에 브리즈번 도서관이 있다. 이 도서관에서는 영어로 대화할 수 있는 모임을 매주 진행한다. 한국에서 호주 워킹홀리데이를 알아볼 때부터 참여해보고 싶었던 프로그램이었고, 시간이 맞아 참여할 수 있었다. 우리 조는 일본인 2, 베트남인 1, 싱가폴인 1, 한국인 1(나)로 구성됐다. 입장할 때 국적을 말하는데, 가능한 겹치지 않게 배치해주는 것같았다. 아무래도 영어 실력을 늘리고 싶은 사람들이 많이 오다 보니 대부분이 아시안이다. 그래도 모두 영어 실력이 고만고만 하기 때문에, 못난 놈은 서로 얼굴만 봐도 흥겹다고 엄청 재밌게 대화했다. 다만 당황스러웠던 건, 베트남 친구가 중국과 미국 사이에서 한국의 중립적인 정치적 스탠스를 물어본 거였다. 한국은 정치적 질문에 굉장히 민감하고 폐쇄적이다. 그런데 외국 애들이라 그런건지, 아니면 얘가 특별한건지 모르겠지만 상당히 오픈되어 있었다.</p> <h3 id="쉐어하우스-구하기">쉐어하우스 구하기</h3> <p>호주에 온지 3일이 흐른 상태였다. 백패커스 생활도 곧 끝나고 마음이 초조해져갔다. 백패커스 예약할 때 이벤트로 1박 당 30불 꼴이었지만, 연장 가격을 보니 50불이었다. 너무 비싸서 바로 집을 알아봤다. 플랫 메이트, 페이스북 마켓 플레이스, 검트리를 통해 알아봤다. 내가 원하는 조건은 1. 독방, 2. 책상과 의자가 포함돼 있을 것, 3. 주 250불 내 였다. 한인 쉐어는 가능한 들어가지 말아야 겠다고 생각했으나 결론적으로는 한인 쉐어에 들어갔다.</p> <p>오지(Aussie) 쉐어를 많이 알아봤다. 한국에서는 에어컨, 책상, 옷장같이 룸에 포함되어 있는걸 옵션이라고 하는데, 호주는 furnished라고 한다. 한국은 책상, 의자, 옷장, 에어컨 등이 대부분 포함돼어 있는 반면, 호주는 furnished라고 해봤자 기본적으로 옷장 정도인 경우가 많고 책상과 의자는 없는 경우가 많았다. 그래서 조건에 부합하는 오지 쉐어를 찾는게 매우 힘들었다.</p> <p>또한 나는 단기 방을 찾고 있었다. 쉐어 하우스에는 minimum stay(leave)가 존재하는데, 말 그대로 최소한의 거주 기간을 정해놓는다. 나는 2주 내지는 한 달 정도 머물 곳이 필요했고, 그 사이에 일을 구하고 일터 근처로 이사할 계획이었다. 하지만 그 정도의 단기 방은 오지 쉐어에서는 찾아볼 수 없었다. 결국 브리즈번 한인 사이트인 썬브리즈번에서 단기 숙소를 찾기 시작했다. 결론적으로 말하면 썬브리즈번에서 2개의 집을 봤고, 페이스북 마켓플레이스에서 1개의 집을 봤다.</p> <p>페이스북 마켓플레이스에서 먼저 연락이 왔고, 지역은 Sunny Bank였다. 집 상태가 낡아보였지만 당시에는 참을 수 있다고 생각했다. 가격은 주 200불로 괜찮았다. 인스펙션 시간이 3시 30분에서 4시였다. 그런데 썬브리즈번에서 본 집에서 연락이 왔다. Rochedale 지역이었고 주 260불이었으며 단기 거주가 가능했다. Sunn Bank 인스펙션 시간을 4시 30분으로 미루고 Rochedale 지역으로 3시에 인스펙션을 보러 갔다.</p> <p>Rochedale 지역에 도착하니 이 지역은 완전 한적한 곳이라는걸 알 수 있었다. 진짜 할 게 없어보였다. 쉐어하우스는 집 주인이 이사온지 얼마 안된 집이었고 상태가 깔끔했다. 집 주인도 친절해보였다. 하지만 Rochedale이라는 지역이 너무 한적해서 별로였고 차가 필요해보였다. 집 컨디션은 마음에 들었지만 Sunny Bank 지역의 집을 보고 결정하기로 했다.</p> <p>Sunny Bank 지역에 도착하니, 확실히 Rochedale과는 다르게 어느정도 상권이 형성돼 있었다. 알아본 바로는 이 지역은 차 없이도 생활할 수 있을 정도라고 한다. 다만, 중국어로 된 간판이 매우 많았고, 아니나 다를까 아시안이 많이 거주하는 지역이라고 한다. 인스펙션 하기로 한 집에 도착했고, 집 주인 아주머니를 만났다. 한국인인 줄 알았는데 중국인이었다. 집에 들어가보니 쉰내가 났고 모든게 낡아있었다. 심지어 메트리스는 엄청 누랬다. 집 상태를 보자마자 여기서 살 수는 없다는 생각이 들었다. 그래도 인스펙션 또한 경험이기 때문에 집 주인한테 minimum stay, 세탁기, 키친 사용, 청소 주기 등을 물어봤다. 모든게 마무리 될 쯤, 집 주인이 말했다. ‘아까 같이 나온 남자 봤지? 그 남자가 이미 사인 하고 갔어’라고. 내가 집을 보는 시점에 내가 살 수 있는 방은 없던 거다. 어차피 그 집에서 살 생각이 없어서 다행이었다. 경험이라 생각하고 나왔다.</p> <p>Sunny Bank 집에서 나오니 카톡이 하나 와 있었다. 썬 브리즈번에서 본 집이었고, 근처 Eight mile plains였다. 마침 바로 옆 동네라서 5시에 인스펙션 가능하겠냐고 연락을 보냈고, 집 주인도 마침 5시에 도착할 것 같다고 했다. 서로 시간대가 맞아서 5시에 인스펙션을 보게 됐다.</p> <p>Eight mile plains에서 인스펙션 보는 집은 상당히 컨디션이 좋았다. 집 주인으로부터 얘기를 들어보니 상당히, 결벽증 수준으로 깔끔하신 분이었다. 집 소개를 하면서 두 문장에 한 번 꼴로 청결과 관련된 얘기를 했다. 이 방은 단기가 가능했고, 단기 시, 시티 근처가 아닌대도 주에 285불로 매우 비쌌다. 집 주인과 얘기를 나누다가, 장기(2개월 이상)로 거주하면 주 240불이라는 말을 들었다. 집 컨디션이 최상이었고 eight miles plains 지역이 교통도 매우 좋아서, 주 240불이면 정말 괜찮은 조건이라 생각했다. 그래서 집으로 돌아가는 버스에서 이 집에서 장기로 거주하겠다고 말했고, 2025년 5월 28일, 수요일부터 이 집에서 거주하기로 했다. 백패커스가 5월 24일에 끝나기 때문에, 그 사이에 거주할 공간이 필요했다. 그래서 5월 28일까지 백패커스 기간을 연장했다.</p> <h3 id="job-구하기">Job 구하기</h3> <p>2025년 5월 23일, 금요일에 레쥬메를 돌리러 브리즈번 시티로 아침 일찍 향했다. 아침 7시에서 8시 사이에 도착했는데, 생각보다 연 식당이 별로 없었다. 나는 키친 핸드(주방 보조) 포지션으로 지원하려고 했다. 그런데 열린 식당 대부분이 너무 작아서 키친 핸드를 쓸 규모가 아니었다. 겨우 Queen st mall 근처의 푸드 코트에 레쥬메 두 장을 돌렸다.</p> <p>레쥬메 두 장을 돌리고 잠시 쉬고 있는데, 내 레쥬메에 오타가 있는 걸 발견했다. 바로 백패커스로 돌아가서 레쥬메의 오타를 수정했다. 그리고 레쥬메 상단에 내가 지원하는 포지션을 적어놨다. 첫 레쥬메를 돌렸을 때 내가 지원하는 포지션을 물었다. 나는 kitchen hand에 지원한다고 personal statement에 적어 놔서 괜찮을거라고 생각했다. 하지만 사람들은 생각보다 문장을 읽지 않는 다는걸 알았고, 상단에 포지션도 추가해야겠다고 다짐했다.</p> <p>다시 브리즈번 시티로 갔고, 10시쯤에 도착했다. 이 시간대에 상당히 많은 레스토랑이 열려있었다. 나는 약 한 시간 동안 새로운 레쥬메를 14장 정도 돌렸다. 그리고 11시 쯤 Gather라는 레스토랑에서 연락이 왔다. 시프트는 11시부터 2시까지, 총 3시간이었다. 매우 짧았지만 내가 물, 불 가릴 처지가 아니라서 트라이얼을 봐도 되겠냐고 했고, 당일 오후 12시 30분부터 1시간동안 트라이얼을 진행했다. 트라이얼 하면서 호주의 주방을 느껴볼 수 있었고 내가 호주에서 영어로 일할 수 있다는 자신감을 얻는 계기가 됐다.</p> <p>1시 30분에 트라이얼이 끝나고 나와보니, 또 연락이 와 있었다. 레쥬메를 돌리러 식당에 갔는데, 감사하게도 한국인 여성분이 보스를 가리키며 눈치를 줬던 레스토랑이 있었다. 그 여성분이 전화를 준 것이었다. 전화를 받으니 3시에 트라이얼을 볼 수 있는지 여쭤보셨다. 나는 마침 Ann st였고 그 레스토랑은 바로 건너편 스트릿이었다. 자기가 2시에 업무가 끝나서 2시 전에 오면 밥 해줄테니 먹고, 쉬다가 트라이얼 보라고 해서 바로 갔다. 그 식당은 Firefly Espresso Bar Pizza 다.</p> <p>2시 전에 도착하니 그 여성 분을 만나서 인사했고, 보스랑 바로 인터뷰를 보게 됐다. 보스는 덩치가 어느정도 있었는데 알고보니 엄청 친절하신 분이었고, 상당한 아시안 내지는 코리안 러버였다. 영어로 잡 인터뷰를 순조롭게 진행했고 보스도 날 긍정적으로 보는 것같았다. 내가 호주에 도착한지 일주일도 안돼서 오래 일할 수 있었기 때문인 것같다. 다만, 내가 Eight mile plains에서 Brisbane City까지 오전 6시 전에 도착해야하기 때문에 이 점이 보스한테 걸렸나보다. 그래서 가능한 일찍 몇 시에 도착할 수 있는지와 super account를 문자로 알려달라고 했고, 인터뷰는 끝났다. 인터뷰 내용으로는, 내 메인 업무는 키친이지만, 서버도 가능하고, 바텐더도 가능하다고 했다. 일도 하고싶으면 마음껏 하라고 하는걸 보니 시프트도 많이 줄 수 있는 식당으로 보였다. 오전 6시 출근, 오후 2~3시 퇴근이므로 최소한 8시간 정도는 보장이 되는 곳이었다. 그래서 이 레스토랑에서 일하고 싶다는 생각이 들었다.</p> <p>처음에는 레쥬메 돌리는 게 상당히 어려웠다. 손님은 줄 지어 서있었고, 바쁜 와중에 내가 레쥬메를 돌리면 굉장히 언짢게 보지 않을까 싶었다. 하지만 돌리면 돌릴수록 정말 아무것도 아니라는 걸 알게됐다. 호주 사람들은 대부분 착한 것같다. 바쁜 시간대에 레쥬메를 돌리러 와도 다들 인사해주고 친절하게 받아준다. 이 경험이 계속돼니 레스토랑이 보이면 주저없이 들어갈 정도로 레쥬메를 돌리는게 쉬워졌다.</p> <h3 id="전화-업무">전화 업무</h3> <p>Firefly Espresso Bar Pizza의 보스한테 super account를 알려주기 위해 super를 만들었다. super는 superannuation의 줄임말인데, 연금을 의미한다. Super를 만들고 보스에게 보내려는 찰나에, 내 이름을 잘못 적은걸 확인했다. BEO<strong>MS</strong>EO가 아니라 BEO<strong>SM</strong>EO로 적어버렸다. 그래서 prifle에 들어가서 이름을 바꾸려고 하니, 직접 바꿀 순 없고 전화를 해야했다. 잠깐의 실수로 호주에서 통역 서비스 없이 전화 업무를 보게 됐다. ARS조차 들리지 않았다. 중간 중간 단어는 들리는데 문장 전체가 이해되지 않았다. 소거법으로 번호를 누르고 겨우 상담원과 연결할 수 있었다.</p> <p>상담원이 말하면 내가 죄송한데 천천히 말해줄 수 있냐고 물었고, 상담원이 다시 천천히 말해줬다. 그리고 내가 이해한걸 말했고 상담원이 확인해 주는 방식으로 상담이 진행됐다. 내가 이름을 바꿀 수 있는 방법은 두 개가 있었다. 첫 번째 옵션은 폼을 제출하는 거고, 10 영업일 정도 소요된다. 두 번째 방법은 3~5 영업일 정도 소요되는 방법으로, 계정을 삭제하고 다시 만드는 방법이다.</p> <p>나는 당장 레스토랑 보스한테 super account number를 전달해야 했기에 두 번째 방법은 불가능했다. 계정을 삭제하고 다시 만들게 되면 그 사이에 내가 super account number가 없게 되기 때문이다. 나는 첫 번째 방법을 선택했고 상담원과 정말 긴 시간동안 얘기를 나눴다. 정말 죄송했다. 나는 폼을 제출하기 위해 폼을 작성해야하며, 내 여권의 photo scan을 JP(Justice of the Peace)에서 공증받고 같이 첨부해야 한다는 얘기를 들었다. 또한 보스가 내 연금을 처리하기 위해 필요한 문서까지 받아냈다.</p> <p>호주에서 전화 업무를 영어로 진행해본 건 처음이었다. 한국에서 비자 승인이 나지 않아 호주 이민성에 전화를 해 본적은 있지만 통역 서비스를 이용했었다. 내가 직접 영어로 전화 업무를 해보니 약간의 자신감과 상당한 미안함이 생겼다.</p>]]></content><author><name></name></author><category term="working_holiday"/><category term="formatting"/><category term="links"/><summary type="html"><![CDATA[호주에 온 지 7일차]]></summary></entry><entry><title type="html">Working Holiday (4)</title><link href="https://beomseochoi.github.io/blog/2025/WorkingHolidy_4/" rel="alternate" type="text/html" title="Working Holiday (4)"/><published>2025-04-13T22:38:00+00:00</published><updated>2025-04-13T22:38:00+00:00</updated><id>https://beomseochoi.github.io/blog/2025/WorkingHolidy_4</id><content type="html" xml:base="https://beomseochoi.github.io/blog/2025/WorkingHolidy_4/"><![CDATA[<h2 id="출국-준비">출국 준비</h2> <p>호주 워킹홀리데이 비자를 받았으므로 출국 준비를 하고자 한다. 우선 다니고 있는 아르바이트를 그만두어야 하고, 호주에 가지고 갈 짐을 챙겨야 하며, 보험이나 거주지 등 여러 신고를 해야한다.</p> <h3 id="퇴직">퇴직</h3> <p>아르바이트는 2025년 5월 15일까지 근무하기로 했다. GS25 직영점은 매월 16일부터 다음 달 15일까지 근태를 종합하여 다음 달 25일에 월급을 지급한다. 나는 일요일부터 목요일까지 22시에 출근하는데, 마침 2025년 5월 15일이 목요일이면서 월급 정산의 마지막 날이기에 이 날까지만 근무하기로 했다. Fresh start effect와 급여 정산일이 잘 맞물렸다.</p> <h3 id="출국-일정">출국 일정</h3> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-04-14-WorkingHolidy_4/flight_fees_in_May-480.webp 480w,/assets/img/2025-04-14-WorkingHolidy_4/flight_fees_in_May-800.webp 800w,/assets/img/2025-04-14-WorkingHolidy_4/flight_fees_in_May-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-04-14-WorkingHolidy_4/flight_fees_in_May.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>출국은 마지막 근무의 이틀 뒤인 5월 17일에 하려고 한다. 출국일은 퇴직일, 방 계약 종료일, 호주 도착 요일, 항공권 가격을 고려했다. 5월 15일까지 근무하기 때문에 5월 16일 이후에 출국해야한다. 또한 방 계약이 5월 21일에 만료되기 때문에 그 전에 출국해야한다. 나는 호주에 도착하자마자 구직 및 인스펙션을 시작할 계획이라 백패커스에 머무는 7일동안 쉴틈없이 움직여야 한다. 그래서 도착하자마자 발빠르게 뛰어다닐 수 있도록 월요일에 도착하는 항공권을 구매하고자 했다. 하지만 일요일에 월요일에 도착하는 항공편은 없었고 일요일에 도착하는게 최선이었다. 마지막으로 항공권 가격을 고려했을 때 5월 17일 항공편이 5월 중 저렴한 축에 속해 최종적으로 5월 17일에 출국하기로 결정했다.</p> <blockquote> <p>참고로 항공편을 검색하는데 SkyScanner라는 사이트를 이용했다. 상당히 유용해 보인다. (https://www.skyscanner.co.kr/)</p> </blockquote> <h3 id="짐">짐</h3> <p>호주의 브리즈번의 날씨는 수치상으로 보면 겨울에도 온화해 보이나, 브리즈번에 워킹홀리데이를 간 사람들의 증언에 따르면 생각보다 춥다고 한다. 내가 호주에 도착하는 5월 중순은 겨울이라서 겨울 옷을 충분히 가져가기로 했다. 준비물은 유튜브에 검색하면 충분히 많은 자료를 찾을 수 있다. 호주 워킹홀리데이 준비물 동영상들에서 서로 의견이 갈리는 부분은 짐을 최대한 가져가는지와 최소한으로 가져가고 호주에서 구매하는지였다. 이는 취향과 개인적 여건 차이로 보였으며, 나는 한국에서 최대한 많이 가져가기로 했다.</p> <p>가능한 많은 짐을 챙기는 이유는 쓸데없는 지출 방지, 한국 제품의 퀄리티와 저렴한 가격에 있다. 한국에서 가지고 있는 물건의 부피가 너무 크거나 호주에서도 매우 저렴하게 구매할 수 있는 경우엔 짐으로 챙기지 않아도 된다고 본다. 하지만 그렇지 않은 경우에는 웬만하면 가져가는게 좋다고 본다. 호주에서 초기 정착에 방세, 생활비만 해도 많은 경제적 비용을 소모할게 쉽게 예상되기 때문이다. 또한 일부 호주 물건의 퀄리티가 좋지 못하고 가격까지 비싸다고 한다. 이에 해당되는 대표적인 물건은 의류, 수건, 화장품이 있다. 그래서 수건은 한국에서 사용하던걸 가져갈거고, 의류와 화장품(썬크림, 로션 등)은 한국에서 미리 추가로 구매해서 가고자 한다.</p> <h3 id="임시-숙소--보험--250524">임시 숙소 &amp; 보험 (+ 25.05.24.)</h3> <p>임시 숙소와 보험은 출국 직전 급히 예약했다. 임시 숙소는 여러 옵션이 있다: 쉐어하우스, 백패커스, 홈스테이. 나는 1~2주간 백패커스에 거주하면서 일과 숙소를 구할 계획이다. 그래서 백패커스 중 유명한 Brisbane City YHA를 선택했다. YHA 말고도 다른 백패커스 옵션이 많았는데, 아고다에서 이벤트로 하루 당 30불 수준에 예약 가능해서 주저없이 YHA를 선택했다. 5월 18일 체크인, 5월 24일 체크아웃, 즉 6일 예약했다.</p> <p>보험은 크게 삼성화재, 마이뱅크, 어시스트 카드 정도 옵션이 있었다. 처음에는 유명한 삼성화재 보험에 가입하려고 했다. 그런데 어시스트 카드는 워홀 조기 귀국자에 한해 지원금을 준다고 했다. 절대 조기 귀국하지 않겠다고 백번 넘게 다짐했으나, 사람 일 어떻게 될지 모르는 거 아닌가. 예상치 못한 상황을 위한게 보험의 역할인 것을… 그래서 어시스트 카드에 가입했다.</p>]]></content><author><name></name></author><category term="working_holiday"/><category term="formatting"/><category term="links"/><summary type="html"><![CDATA[출국 준비]]></summary></entry><entry><title type="html">Working Holiday (3)</title><link href="https://beomseochoi.github.io/blog/2025/WorkingHolidy_3/" rel="alternate" type="text/html" title="Working Holiday (3)"/><published>2025-03-17T09:48:00+00:00</published><updated>2025-03-17T09:48:00+00:00</updated><id>https://beomseochoi.github.io/blog/2025/WorkingHolidy_3</id><content type="html" xml:base="https://beomseochoi.github.io/blog/2025/WorkingHolidy_3/"><![CDATA[<h2 id="비자가-승인되기-까지">비자가 승인되기 까지</h2> <p>이 포스트를 작성하는 시점인 2025년 3월 17일에 호주 워킹홀리데이 비자가 승인됐다. 나는 약 3개월간 비자 승인이 지연됐다. 이 글은 비자가 승인되기 까지의 과정과 비자 지연 해결방법을 기록하는 목적으로 작성한다.</p> <p>2024년 12월 18일, 호주 워킹홀리데이 비자를 신청했다. 그로부터 이틀 뒤인 2024년 12월 20일에 서울 삼육 병원에서 신체검사를 받았으며, 신체검사 결과는 2024년 12월 24일에 호주 이민성으로 전송됐다. 호주 이민성은 Global processing times라는 비자 승인까지 소요되는 통상 기간을 제공한다. 이에 따르면 호주 워킹홀리데이 비자 신청자의 약 50%는 이틀 내에 비자가 승인되고, 90%는 52일 내에 비자가 승인된다. 90%의 통상 승인 기간은 수시로 변하며, 내가 비자를 신청하던 시기에는 52일, 비자를 승인받은 시점에는 61일이었다.</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-03-17-WorkingHolidy_3/global_processing_times-480.webp 480w,/assets/img/2025-03-17-WorkingHolidy_3/global_processing_times-800.webp 800w,/assets/img/2025-03-17-WorkingHolidy_3/global_processing_times-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-03-17-WorkingHolidy_3/global_processing_times.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>신체검사까지 마친 이후로는 기다림과의 싸움이다. 그러나 안타깝게도 나는 기다리다가 standard processing timeframe을 뛰어넘게 됐다. 비자 지연을 해결하기 위한 방법으로는 이민성 전화와 컴플레인이 있으며, 이민성 전화는 문제 해결에 하나도 도움이 되지 않고 컴플레인이 소위 ‘직빵’이다. 나는 2025년 2월 22일에 호주 이민성에 컴플레인을 걸었으며, 23일 후인 2025년 3월 17일, 11시 55분에 컴플레인 메일이 접수됐다는 메일을 받았다. 그리고 당일 15시 00분에 비자가 승인됐다.</p> <p>컴플레인 메일을 기다리던 중, 이민성에 전화로 내 비자 신청이 접수가 됐는지, 놓친 서류는 없는지, 컴플레인이 접수가 됐는지를 물어봤다. 앞서 말했지만 의미없는 짓이니 국제전화 요금 아끼는게 낫다. 호주 이민성의 답변을 요약하자면,</p> <blockquote> <p>우리는 Global processing times를 제공하며, 이는 통상적인 비자 승인 기간이고 그 기간에 비자 승인을 보장하지 않는다. 호주 이민성은 당신같은 outside standard processing timeframe 또한 정상적인 범주로 보고 있으며, 비자가 승인될때까지 기다리십시오.</p> </blockquote> <p>이다. 또한 내 질문에 대한 대답은</p> <blockquote> <p>호주 이민성으로부터 비자 신청 완료 메일을 받았으면 비자 신청이 된 것이고, 호주 이민성이 보낸 메일이 보내라는 서류를 다 보냈으면 놓친 서류는 없다. 또한 앞서 말했듯이 너는 정상 범주이기 때문에 너의 컴플레인에 대해 응답이 없을 수 있다.</p> </blockquote> <p>이다. 이런식으로 비자 지원서나 서류를 직접적으로 확인해주지 않고 메일을 받았는지 물어본다음 최대한 보수적으로 대답한다. 보수적인 대답의 의도는 이해하지만 비자 지연을 겪는 당사자의 입장에서는 미칠 노릇이다. 따라서 호주 이민성에 전화하는건 문제 해결에 진전이 없으며, 컴플레인 메일이 효과를 보기 좋다.</p> <p>나는 사실 2월 말에 살고 있던 자취방 계약이 만료되어, 계약 만료와 동시에 호주로 출발하려고 했다. 하지만 비자 승인이 지연돼 단기 방을 알아보게 됐고 5월 말에 계약이 만료되는 단기 방을 구했다. 또한 3월이 돼서는 워킹홀리데이 비자가 나오지 않아 절망감에 취업 준비를 했다. 5월 말에 방 계약이 만료되는데, 이때까지 비자가 승인되지 않을 수도 있겠다는 생각 때문이었다. 3월에 겪은 감정을 묘사하자면 ‘피말린다’라는 표현이 딱 어울린다. 그래도 비자가 승인됐으니 이제서야 안도감을 느낀다. 호주는 방 계약이 만료되는 5월 중순~말에 출발할 것같다.</p>]]></content><author><name></name></author><category term="working_holiday"/><category term="formatting"/><category term="links"/><summary type="html"><![CDATA[비자가 승인되기 까지]]></summary></entry><entry><title type="html">Open Source Usage Manual</title><link href="https://beomseochoi.github.io/blog/2025/License/" rel="alternate" type="text/html" title="Open Source Usage Manual"/><published>2025-03-17T09:48:00+00:00</published><updated>2025-03-17T09:48:00+00:00</updated><id>https://beomseochoi.github.io/blog/2025/License</id><content type="html" xml:base="https://beomseochoi.github.io/blog/2025/License/"><![CDATA[<h2 id="오픈-소스를-사용할-때-주의할-점">오픈 소스를 사용할 때 주의할 점</h2> <p>개발 과정에서 모든 소스코드를 직접 작성하는건 상당히 비효율적이다. 일반적으로 개발에 사용되는 자원을 절약하기 위해 오픈 소스를 사용하게 된다. 오픈 소스는 말 그대로 공개된 소스 코드이며, 오픈 소스가 <strong>제시하는 조건</strong>만 지킨다면 자유롭게 사용해도 된다. License는 오픈 소스 사용에 대한 권한 또는 허가와 관련된 내용을 서술한 문서이다. 오픈 소스에 license가 적용돼있다면 license에서 제시하는 조건을 준수해야 한다.</p> <p>License는 저작자가 원하는 대로 작성할 수 있으나, 대다수의 오픈 소스는 널리 사용되는 license를 적용한다. 대표적인 license로는</p> <ol> <li>Apache License</li> <li>BSD License</li> <li>MIT License</li> <li>GNU GPL License</li> </ol> <p>가 있다.</p> <p>오픈 소스를 사용할 때 다음 사항을 고려해야한다.</p> <ol> <li>상업적 사용 여부 <ul> <li>오픈 소스를 사용하는 프로그램을 상업적인 용도로 사용하는지</li> </ul> </li> <li>코드 공개 여부 <ul> <li>오픈 소스를 사용하는 프로그램의 코드를 공개 해야하는지</li> </ul> </li> <li>동일한 license 적용 여부 <ul> <li>사용하는 오픈 소스와 동일한 license로 오픈 소스를 사용하는 프로그램의 license에 적용 해야하는지</li> </ul> </li> </ol> <table id="table" data-toggle="table" data-url="/assets/json/2025-03-22-License/license_table_data.json"> <thead> <tr> <th data-field="license" data-halign="center" data-align="center">License</th> <th data-field="commercial usage" data-halign="center" data-align="center">상업적 사용 여부</th> <th data-field="source open" data-halign="center" data-align="center">소스 코드 공개 여부</th> <th data-field="same license" data-halign="center" data-align="center">동일한 license 적용 여부</th> </tr> </thead> </table> <p><br/></p> <p>오픈 소스를 사용한 프로그램을 <strong>배포, 판매, 납품하는 경우</strong>에 오픈 소스 license의 의무 사항을 준수해야 하며, 위 4개의 license는 <strong>해당 오픈 소스를 사용했음을 고지</strong>해야한다. 포함해야할 정보는</p> <ol> <li>저작권자 정보</li> <li>오픈 소스 명칭</li> <li>License 명 및 버전</li> <li>라이선스 사본</li> </ol> <p>이다.</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/2025-03-22-License/kakao_talk_license_notice-480.webp 480w,/assets/img/2025-03-22-License/kakao_talk_license_notice-800.webp 800w,/assets/img/2025-03-22-License/kakao_talk_license_notice-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/2025-03-22-License/kakao_talk_license_notice.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" data-zoomable="" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>카카오톡은 위 형식으로 개발 시 사용한 오픈 소스를 고지하고 있다.</p> <hr/> <h3 id="source">Source</h3> <ul> <li>https://postwithmemory.tistory.com/entry/%EC%98%A4%ED%94%88%EC%86%8C%EC%8A%A4-%EB%9D%BC%EC%9D%B4%EC%84%BC%EC%8A%A4%EC%9D%98-%EC%A2%85%EB%A5%98%EA%B3%BC-%EC%A0%81%EC%9A%A9%EB%B2%94%EC%9C%84</li> <li>https://lsware-opensource.tistory.com/17</li> </ul>]]></content><author><name></name></author><category term="open_source"/><category term="formatting"/><category term="links"/><summary type="html"><![CDATA[오픈 소스를 사용할 때 주의할 점]]></summary></entry><entry><title type="html">[Bug Report] Shallow copy</title><link href="https://beomseochoi.github.io/blog/2025/bug_report_shallow_copy/" rel="alternate" type="text/html" title="[Bug Report] Shallow copy"/><published>2025-03-12T11:30:00+00:00</published><updated>2025-03-12T11:30:00+00:00</updated><id>https://beomseochoi.github.io/blog/2025/bug_report_shallow_copy</id><content type="html" xml:base="https://beomseochoi.github.io/blog/2025/bug_report_shallow_copy/"><![CDATA[<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="k">template</span> <span class="o">&lt;</span><span class="k">typename</span> <span class="nc">T</span><span class="p">&gt;</span>
    <span class="kr">inline</span> <span class="kt">void</span> <span class="n">DynamicFixedSizeObjectBuffer</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;::</span><span class="n">Pull</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="c1">// std::memcpy(&amp;buffer[0], &amp;buffer[front_idx], GetFilledSize());</span>
        <span class="n">std</span><span class="o">::</span><span class="n">copy</span><span class="p">(</span><span class="o">&amp;</span><span class="n">buffer</span><span class="p">[</span><span class="n">front_idx</span><span class="p">],</span> <span class="o">&amp;</span><span class="n">buffer</span><span class="p">[</span><span class="n">front_idx</span><span class="p">]</span> <span class="o">+</span> <span class="n">GetFilledSize</span><span class="p">(),</span> <span class="n">buffer</span><span class="p">.</span><span class="n">begin</span><span class="p">());</span>

        <span class="n">rear_idx</span> <span class="o">=</span> <span class="n">GetFilledSize</span><span class="p">();</span>
        <span class="n">front_idx</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="p">}</span>
    
    <span class="k">template</span> <span class="o">&lt;</span><span class="k">typename</span> <span class="nc">T</span><span class="p">&gt;</span>
    <span class="kr">inline</span> <span class="kt">void</span> <span class="n">DynamicFixedSizeObjectBuffer</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;::</span><span class="n">Expand</span><span class="p">(</span><span class="k">const</span> <span class="kt">uint32_t</span> <span class="n">expand_object_count</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">expand_object_count</span> <span class="o">&lt;=</span> <span class="n">GetBufferSize</span><span class="p">())</span>
        <span class="p">{</span>
            <span class="k">return</span><span class="p">;</span>
        <span class="p">}</span>

        <span class="n">std</span><span class="o">::</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="n">new_buffer</span><span class="p">(</span><span class="n">expand_object_count</span><span class="p">);</span>
        <span class="c1">// std::memcpy(&amp;new_buffer[0], &amp;buffer[front_idx], GetFilledSize());</span>
        <span class="n">std</span><span class="o">::</span><span class="n">copy</span><span class="p">(</span><span class="o">&amp;</span><span class="n">buffer</span><span class="p">[</span><span class="n">front_idx</span><span class="p">],</span> <span class="o">&amp;</span><span class="n">buffer</span><span class="p">[</span><span class="n">front_idx</span><span class="p">]</span> <span class="o">+</span> <span class="n">GetFilledSize</span><span class="p">(),</span> <span class="n">new_buffer</span><span class="p">.</span><span class="n">begin</span><span class="p">());</span>
        <span class="n">buffer</span> <span class="o">=</span> <span class="n">std</span><span class="o">::</span><span class="n">move</span><span class="p">(</span><span class="n">new_buffer</span><span class="p">);</span>
        <span class="n">rear_idx</span> <span class="o">=</span> <span class="n">GetFilledSize</span><span class="p">();</span>
        <span class="n">front_idx</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="p">}</span>
</code></pre></div></div> <h2 id="요약">요약</h2> <ol> <li><code class="language-plaintext highlighter-rouge">std::copy</code>는 원소단위 복사, <code class="language-plaintext highlighter-rouge">std::memcpy</code>는 비트단위 복사.</li> <li>복사생성자를 명시하지 않으면 비트단위 복사가 발생.</li> <li>따라서 <code class="language-plaintext highlighter-rouge">std::vector</code>의 원소를 복사할 때 복사생성자를 명시하고 <code class="language-plaintext highlighter-rouge">std::copy</code>를 사용.</li> </ol> <h2 id="문제">문제</h2> <p>두 가지 문제가 있다.</p> <ol> <li><code class="language-plaintext highlighter-rouge">GetFilledSize()</code>는 원소 개수를 의미하기에 <code class="language-plaintext highlighter-rouge">sizeof(T)</code>를 곱해줘야 한다.</li> <li><code class="language-plaintext highlighter-rouge">std::memcpy</code>는 비트단위 복사라서 shallow copy가 발생한다.</li> </ol> <p>2번 문제가 먼저 발생했고 그 과정에서 1번 문제를 발견했다. 2번 문제 때문에 double free가 발생했고, 1번 문제를 해결하더라도 동일하게 double free가 일어났다. 즉 double free는 <code class="language-plaintext highlighter-rouge">std::memcpy</code>를 사용했기 때문이다.</p> <h2 id="원인">원인</h2> <p><code class="language-plaintext highlighter-rouge">std::memcpy</code>는 비트단위 복사를 수행하여 shallow copy가 일어난다. <code class="language-plaintext highlighter-rouge">Pull</code> 함수는 <code class="language-plaintext highlighter-rouge">front_idx</code>부터 <code class="language-plaintext highlighter-rouge">rear_idx</code>까지의 원소를 맨 앞으로 복사한다. 이때 <code class="language-plaintext highlighter-rouge">std::memcpy</code>를 사용하여 shallow copy가 발생하고, 버퍼 내에 다른 원소가 같은 대상을 가리키게 된다. 그 두 원소 중 앞으로 땡겨진 원소를 <code class="language-plaintext highlighter-rouge">[0]</code>, 기존 원소를 <code class="language-plaintext highlighter-rouge">[i]</code>라고 부르겠다. new_buffer에 <code class="language-plaintext highlighter-rouge">[0]</code>이 복사되고, buffer에는 여전히 <code class="language-plaintext highlighter-rouge">[0]</code>과 <code class="language-plaintext highlighter-rouge">[i]</code>가 존재한다. 이후 new_buffer의 내용을 buffer에 이동시키는데, 이 과정에서 buffer의 원소를 소멸시킨다. new_buffer의 <code class="language-plaintext highlighter-rouge">[0]</code>은 deep copy를 수행했기 때문에 buffer의 원소가 소멸되도 문제가 없다. 하지만 buffer의 <code class="language-plaintext highlighter-rouge">[0]</code>과 <code class="language-plaintext highlighter-rouge">[i]</code>는 shallow copy 때문에 같은 대상을 가리킨다. 그래서 double free가 발생한다.</p>]]></content><author><name></name></author><category term="Develop"/><category term="formatting"/><category term="links"/><summary type="html"><![CDATA[```c++ template inline void DynamicFixedSizeObjectBuffer::Pull() { // std::memcpy(&amp;buffer[0], &amp;buffer[front_idx], GetFilledSize()); std::copy(&amp;buffer[front_idx], &amp;buffer[front_idx] + GetFilledSize(), buffer.begin());]]></summary></entry><entry><title type="html">순환 참조에 대한 걱정</title><link href="https://beomseochoi.github.io/blog/2025/CircularReference/" rel="alternate" type="text/html" title="순환 참조에 대한 걱정"/><published>2025-02-25T21:16:00+00:00</published><updated>2025-02-25T21:16:00+00:00</updated><id>https://beomseochoi.github.io/blog/2025/CircularReference</id><content type="html" xml:base="https://beomseochoi.github.io/blog/2025/CircularReference/"><![CDATA[<h2 id="순환-참조">순환 참조</h2> <p>프로그래밍하다보면 두 클래스가 서로를 참조하는 일이 발생하는데 이를 순환 참조라고 부른다. 순환 참조는 안티 패턴으로 잘 알려져 있다. A와 B가 서로를 참조한다고 할 때, A를 해제하기 위해 B를 해제해야 하고, B를 해제하기 위해 A를 해제해야 한다. 이러한 문제를 해결하기 위한 방법론을 마련해야 한다.</p> <p>참조 관계는 노드 간 연결로 추상화할 수 있다. A가 B에 의존하면 A→B로 표현할 수 있다. 참조 관계를 노드로 표현하면 하나의 자료구조가 된다. 그 자료구조가 그래프이며, cycle이 존재하면 순환 참조가 발생한다. 참조 관계 그래프에서 Cycle을 제거하면 순환 참조 문제를 근본적으로 해결할 수 있다. 참조 관계가 DAG 자료구조가 되도록 클래스를 디자인해야 순환 참조를 막을 수 있다.</p> <p>근본적인 해결 방법은 알았으나, cycle을 제거하면서 클래스를 디자인하는 게 현실적으로 가능한 작업인가를 고민해야한다. 두 클래스가 통신하는 경우는 매우 빈번하므로 현실적으로 근본적인 해결책은 불가능에 가깝다.</p> <h2 id="소유와-참조">소유와 참조</h2> <p>A와 B가 서로 의존할 때, 서로가 의미하는 ‘의존’이 다를 수 있다. 개념적으로 A는 B를 소유할 수도 있고, 참조할 수도 있다. 두 클래스가 서로의 포인터를 가지기는 하나, 한 클래스는 소유의 의미일 수 있으며, 다른 클래스는 참조의 의미일 수 있다.</p> <p>이 부분에서 용어를 정리할 필요가 있다. 아래 용어는 널리 쓰이는 표현은 아니고 이 포스트에서 사용할 표현이다.</p> <ul> <li>순환 의존 <ul> <li>A와 B가 서로의 포인터를 가지고 있는 상황</li> </ul> </li> <li>순환 소유 <ul> <li>A와 B가 소유 목적으로 순환 의존</li> </ul> </li> <li>순환 참조 <ul> <li>A와 B가 참조 목적으로 순환 의존</li> </ul> </li> </ul> <p>‘널리 알려진’ 순환 참조는 순환 의존을 의미한다.</p> <p>순환 의존은 메모리 해제 이슈를 만든다. 하지만 의존 목적을 생각하면 이 문제를 해결할 수 있다.</p> <ul> <li>A가 B를 소유하고, B는 A를 참조하는 경우 <ul> <li>A가 해제되면서 B를 해제한다.</li> <li>B는 A를 참조하고 있지만, 소유하지 않으므로 단순히 참조를 끊으면 된다.</li> <li>결과적으로, A가 해제되면서 B도 안전하게 해제된다.</li> </ul> </li> </ul> <p>하지만 A와 B가 서로를 소유하는 경우가 문제가 된다.</p> <ul> <li>A를 해제하면 B도 해제해야 하고, B를 해제하면 다시 A를 해제해야 한다.</li> <li>결과적으로 A와 B가 서로를 계속 해제하려는 무한 루프에 빠질 수 있으며, 메모리 이중 해제나 메모리 누수 등의 심각한 문제가 발생할 수 있다.</li> </ul> <p>순환 의존은 현실적으로 막을 수 없는 문제지만 순환 소유만은 막아야 한다. 순환 소유는 A와 B를 소유하는 C를 추가하고, A와 B를 순환 참조로 만들면 된다.</p> <div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="k">class</span> <span class="nc">A</span><span class="p">;</span>
<span class="k">class</span> <span class="nc">B</span><span class="p">;</span>
<span class="k">class</span> <span class="nc">C</span><span class="p">;</span>

<span class="k">class</span> <span class="nc">A</span>
<span class="p">{</span>
    <span class="n">B</span><span class="o">*</span> <span class="n">b</span><span class="p">;</span> <span class="c1">// 참조</span>
    <span class="n">C</span><span class="o">*</span> <span class="n">c</span><span class="p">;</span> <span class="c1">// 참조</span>
<span class="p">}</span>

<span class="k">class</span> <span class="nc">B</span>
<span class="p">{</span>
    <span class="n">A</span><span class="o">*</span> <span class="n">a</span><span class="p">;</span> <span class="c1">// 참조</span>
    <span class="n">C</span><span class="o">*</span> <span class="n">c</span><span class="p">;</span> <span class="c1">// 참조</span>
<span class="p">}</span>

<span class="k">class</span> <span class="nc">C</span>
<span class="p">{</span>
    <span class="n">A</span><span class="o">*</span> <span class="n">a</span><span class="p">;</span> <span class="c1">// 소유</span>
    <span class="n">B</span><span class="o">*</span> <span class="n">b</span><span class="p">;</span> <span class="c1">// 소유</span>
<span class="p">}</span>
</code></pre></div></div> <p>가능한 순환 의존(참조-참조, 소유-참조, 소유-소유)을 지금까지 말한 방법으로 해결할 수 있다. 참조는 관계를 끊고, 소유는 해제하며, 서로 소유하면 Mediator를 추가하여 순환 참조로 만든다.</p> <p>C++은 메모리 해제를 자동으로 관리하기 위한 표준 라이브러리를 제공한다. Shared pointer는 그중 하나이며 reference counting으로 포인터를 관리한다. 그러나 reference counting 또한 순환 의존 문제가 발생한다. Reference count를 가지는 A와 B가 순환 의존하면 서로의 reference count가 1이 되어 둘 다 해제되지 못한다. 그래서 참조 목적 포인터 weak pointer를 제공하여 소유-참조 관계를 만듦으로써 위 문제를 해결할 수 있다.</p> <p>Reference counting에 대한 내용은 해당 포스트의 목적과 맞지 않아 언급하지 않는다. 또한 shared pointer와 weak pointer의 퍼포먼스 이슈도 언급하지 않는다.</p> <h2 id="결론">결론</h2> <p>순환 의존을 없애는 클래스 디자인은 현실적으로 어렵다. 그리고 순환 의존의 세 가지 케이스는 모두 해결 가능하다. 순환 의존을 최대한 없애되 불가피할 경우 소유와 참조 관계를 생각하며 클래스를 디자인해야 한다.</p>]]></content><author><name></name></author><category term="Develop"/><category term="formatting"/><category term="links"/><summary type="html"><![CDATA[순환 참조]]></summary></entry><entry><title type="html">CES 2024 Review</title><link href="https://beomseochoi.github.io/blog/2024/CES_2024_review/" rel="alternate" type="text/html" title="CES 2024 Review"/><published>2024-12-19T10:50:00+00:00</published><updated>2024-12-19T10:50:00+00:00</updated><id>https://beomseochoi.github.io/blog/2024/CES_2024_review</id><content type="html" xml:base="https://beomseochoi.github.io/blog/2024/CES_2024_review/"><![CDATA[<h2 id="ces2025가-다가올-때-작성하는-ces2024-후기">CES2025가 다가올 때 작성하는 CES2024 후기</h2> <p>어느덧 대규모 국제 박람회인 CES 2024(Consumer Electronics Show)를 다녀온지 1년이 지났다. 스마트폰 갤러리에서 1년 전 사진을 리마인드 해주는데 인천 국제공항으로 향하는 버스에서 촬영한 사진을 보여줬다. 또한 CES에 같이 참가한 형으로부터 연락이 왔다. 스마트폰 메모 앱을 켜니 그 기간동안 내가 느낀 감정을 적어놓은 기록이 있었다. 내 메일함에도 CES 2025 관련 메일이 왔다. 여러 곳에서 작년의 흔적이 보여 귀국하고 작성하려 했던 CES 2024 후기를 적어보고자 한다.</p> <p>베네시안 홀에서 exhibitor로 부스를 보조하는 활동을 했기 때문에 베네시안 홀을 주로 둘러봤다. 베네시안 홀은 스타트 업의 부스가 주로 위치하는 홀이다. 그래서 부스마다 규모는 작은 편이다. 나는 Computer Science 전공이고 AI에 관심이 있는 학생이었다. 학부 연구생때는 의료 데이터의 시계열 분석을 연구했지만 나는 컴퓨터 비전 분야를 공부하고자 했다. 그래서 박람회에서 CV 기술이 들어간 제품을 주로 보았다. Detection, 3D Reconstruction, Colorization같은 기술이 접목된 제품을 보았던 걸로 기억한다. 많은 제품들을 봤지만 솔직히 말하면 기대 이하였다. 나는 CES에서 혁신이라는 단어를 사용하기에 꽤나 큰 기대감을 가지고 있었다. 하지만 베네시안 홀에 전시된 제품들은 AI 기능이 접목됐을 뿐 혁신까지는 아니라는 생각이 들었다. 혁신상은 무슨 기준으로 주는건지 모르겠다. CES에서 말하는 혁신의 정의가 뭔지 모르겠다. 혁신이란 기존의 것을 아주 새롭게 바꾸는 걸 말한다. AI가 가파르게 발전하는 지금, AI가 들어가면 혁신인가? 기업의 name value가 높으면 주는 상인가? 세계 최고 박람회가 주는 상이니까 내 안목이 부족한 거라고 믿는다. 부스 몇 군데를 둘러보고 나서부터는 제품에 기대를 안하기 시작했다. 오히려 영어 사용에 초점을 두게 됐고 외국에서 운영하는 부스가 보이면 제품 좀 멀리서 지켜본 뒤 말을 걸었다.</p> <p>부스를 참관하면서 배우고 느낀게 없는 건 아니다. 여러 제품을 보면서 비즈니스적으로 접근하는 사고를 가지게 됐다. 이러한 생각은 시장성을 위해 고의로 비교적 낮은 수준의 기술을 사용하는 부스를 많이 봤기 때문이다. 나는 부스에 참관하기 전에 미리 조사를 했다. 그리고 이 부스에서 보여주는 제품이 어느 기술을 사용하는지 미리 추측했다. 하지만 내 예상과 다른 경우가 많았다. 특정 기술을 사용하지 않았는지에 대해 질문했을 때 들었던 대부분의 대답은 시장성과 관련이 있었다. 신기술이나 높은 수준의 기술이 반드시 시장성이 있는건 아니다. 생각해보면 그렇다. 컴퓨터 부품을 예시로 들면 엔트리 급, 미들 급, 하이엔드 급이 나뉘어져 있다. 하이엔드 제품을 만들 능력이 있는데 엔트리나 미들 급 제품을 왜 만드냐고 묻는다면 시장에서 수요가 있기 때문일거다. 이런 자연스러운 생각을 왜 의식하지 못했는지 부끄럽기도 하다. 그리고 나는 기술을 책과 논문으로만 배워왔다. 그러다보니 기술의 트렌드 정도는 파악하더라도, 사장된 기술인지 아직도 쓰이고 있는지 알 길이 없었다. ‘GPU의 모든 기술’이라는 책에서 HBM(High Bandwith Memory) 기술을 본 적이 있다. 그런데 이 기술이 CES 2024의 SK 하이닉스 부스에서 메인으로 보여지고 있었다. 기술을 공부할 때는 시장도 같이 봐야한다는걸 알게됐다.</p>]]></content><author><name></name></author><category term="CES"/><category term="formatting"/><category term="links"/><summary type="html"><![CDATA[CES2025가 다가올 때 작성하는 CES2024 후기]]></summary></entry><entry><title type="html">Working Holiday (2)</title><link href="https://beomseochoi.github.io/blog/2024/WorkingHolidy_2/" rel="alternate" type="text/html" title="Working Holiday (2)"/><published>2024-12-09T14:20:00+00:00</published><updated>2024-12-09T14:20:00+00:00</updated><id>https://beomseochoi.github.io/blog/2024/WorkingHolidy_2</id><content type="html" xml:base="https://beomseochoi.github.io/blog/2024/WorkingHolidy_2/"><![CDATA[<h2 id="타지에-간다는-것">타지에 간다는 것</h2> <p>나는 여행을 좋아하지 않는다. 워킹홀리데이 비자 신청을 앞두고, 여행을 좋아하지 않는데 호주에 가려는 이유는 무엇인지 생각해보았다. 나는 가끔 국내 여행을 생각하곤 한다. 그럴 때마다 가장 먼저 하는 행동은 ‘OO지역 가볼만한 곳’과 유사한 키워드로 검색한다. 검색 결과는 항상 맛집, 산책로, 공원같은 것들이다. 내가 거주하는 곳은 대전인데 대전에도 동일한 음식을 파는 곳이 있고, 산책로도 있고, 공원도 있다. 이 생각이 들면 인터넷을 끈다. 이 과정을 여행 생각이 날 때마다 반복한다. 그리고 한번도 가본 적 없다.</p> <p>여행을 좋아하지도 않는데 호주까지 가려는 이유는 무엇일까. 호주에 있는 음식, 산책로, 공원은 한국에도 있다. 많은 비용을 내고, 일과 숙소가 구해지지 않을 수도 있다는 불확실성을 감수하면서까지 호주에 가야할 이유가 있을까. 호주는 한국이랑 무엇이 다를까. 호주가 아니더라도 다른 나라는 한국이랑 다를게 있을까. 나는 이 의문에 ‘문화’가 다르다는 결론을 냈다.</p> <p>대전과 서울, 한국과 호주 둘 다 음식, 구경거리를 어느정도 공유한다. 하지만 대전에서 서울로 여행하는 건 관심없고, 한국에서 호주로 여행가는 건 관심있다. 내가 대전에서 서울로 놀러가는게 의미없다고 느끼는 이유는 두 지역의 문화가 같기 때문이다. 물론 지역마다 약간의 문화 차이는 있을 수 있다. 이는 문화를 지역 단위로 나눈 경우이다. 하지만 한국인인 나에게 그정도의 문화차이는 흥미를 일으키지 않는다. 국가 단위로 문화를 구분한다면 한국과 호주는 확실히 다른 문화를 가지고 있다. 언어, 사고 방식, 삶의 방식, 전통, 역사, 사회 등 한국과 호주의 문화는 충분히 다르다고 말할 수 있다.</p> <p>내가 호주에서 얻을 수 있는건 호주의 문화다. 이 문화에는 당연하게도 내 궁극적 목표인 언어 학습을 포함한다. 나는 내가 호주에서 한국으로 일찍 귀국하지 않았으면 좋겠다. 가능한 1년이라는 기간을 모두 경험하고 한국으로 돌아오는걸 희망한다. 나는 분명히 호주에서 일과 숙소를 구하고 안정적인 생활을 시작하게 되면 한 생각을 할거다. ‘생활이 똑같은데 호주에 왜 왔지?’라는 생각이 들 때 이 포스트를 떠올리고 읽었으면 좋겠다. 나는 생활을 바꾸려고 간게 아니라 문화를 배우려고 간다는 것을.</p>]]></content><author><name></name></author><category term="working_holiday"/><category term="formatting"/><category term="links"/><summary type="html"><![CDATA[타지에 간다는 것]]></summary></entry><entry><title type="html">Working Holiday (1)</title><link href="https://beomseochoi.github.io/blog/2024/WorkingHolidy_1/" rel="alternate" type="text/html" title="Working Holiday (1)"/><published>2024-12-08T04:51:00+00:00</published><updated>2024-12-08T04:51:00+00:00</updated><id>https://beomseochoi.github.io/blog/2024/WorkingHolidy_1</id><content type="html" xml:base="https://beomseochoi.github.io/blog/2024/WorkingHolidy_1/"><![CDATA[<h2 id="워킹홀리데이-이유와-목표">워킹홀리데이, 이유와 목표</h2> <p>워킹홀리데이란 해외에서 아르바이트를 병행하며 휴식을 즐길 수 있는 프로그램이다. 나는 호주로 워킹홀리데이를 가려고 한다. 나는 사실 워킹홀리데이를 대학교 1학년 때부터 생각해왔다. 그런데 병역, 학업, 두려움, 자금 등을 핑계로 지금까지 미뤄왔다. 대학교를 졸업하고 인턴을 끝낸 이 시점에 다시 워킹홀리데이를 떠올리게 됐다. ‘지금이 아니면 정말로 갈 수 없겠구나’ 라는 생각이 들었고 이젠 정말로 떠나려고 한다.</p> <p>내가 워킹홀리데이에서 궁극적으로 얻고자 하는건 ‘영어’다. 나는 영어 실력이 별로다. 정량적으로 따지면 OPic Intermedate Mid 1이다. Reading, Listening은 토익 기준으로 각각 345, 435점이다. 총 점수는 둘을 더해서 780점이다. 사람마다 ‘영어 실력’의 기준이 다르겠지만, 이 글에서는 IELTs나 TOEFL같은 Reading, Listening, Writing, Speaking이 모두 포함된 시험을 기준으로 한다. 내가 목표하는 점수는 IELTs에서 each 6.5를 받는 거다. 내 마음 속 목표는 each 6.0이다. Each 6.0을 만족하기 위해서 피상적인 목표를 좀 더 높게 잡았다.</p> <p>워킹홀리데이를 가는 사람들 후기를 종합해보니 보통 영어, 돈, 경험 중 목표를 고른다. 나는 영어 이외의 목표는 그닥 관심이 없다. 굳이 고르자면 한국에 도착했을 때 생활에 지장이 없는 금액을 비축해두는 정도이다. 경험 부분은 솔직하게 무엇을 말하는지 모르겠다. 영어와 돈에 비해 상당히 추상적인 목표로 보인다. 내 목표는 두 가지로 정리할 수 있다. 첫 번째는 ‘IELTs each 6.5’이고 그 다음은 ‘한화 500만원 이상 비축’이다.</p> <h2 id="현실적인-문제">현실적인 문제</h2> <p>호주 워킹홀리데이를 준비하는데 가장 중요한건 영어와 돈이다. 영어는 자기가 열심히 하는 수밖에 없고, 준비 비용에 대해 얘기하고자 한다. 나는 호주 워킹홀리데이를 준비하는데 대략적으로 200만원이 소모될 것으로 잡았다. 금일 기준(2024년 12월 08일) 호주달러-원 환율은 1:910.88이다. 비자 신청에 635 aud (약 580,000원)가 든다. 그리고 삼육서울병원에서 호주 워킹홀리데이 신체검사를 받는데 191,000원이 든다. 대전에 거주하니까 대전-서울 왕복 비용으로 4만원을 잡는다. 비행기 편도 값은 45만원 정도가 나왔는데 대전-인천, 브리즈번-숙소 교통비 생각하면 50만원 잡으면 될 것 같다. 보험료는 마이뱅크로 30만원을 잡았다. 이정도 하면 대략 161만원이 소모된다. 숙소값 포함하면 대충 200이 든다.</p> <p>호주에 처음 도착해서 job을 구하기 까지 초기 자금이 필요하다. 나는 초기 자금 500만원을 들고 갈 예정이다. 호주 워킹홀리데이에 가는 한국인이 job을 구하는 방식은 두 가지로 나뉜다. 첫 번째는 오지 잡 (Aussie)이고 두 번째는 한인 잡이다. 오지잡은 호주인 사장 아래서, 한인잡은 한국인 사장 아래서 근무하는 걸 말한다. 나는 오지잡에 가려고 한다. 하지만 초기에는 수입이 없기 때문에 한인잡도 같이 구할거다. 호주라는 나라에 전재산 500만원을 들고 가는 나에겐 워킹홀리데이가 생존이 걸린 모험이기 때문에 오지잡, 한인잡을 가릴 처지가 아니다.</p> <p>또한 호주에서 숙소도 구해야한다. 나는 돈이 여유롭지 않아서 쉐어 하우스를 구할 계획이다. 검트리 기준으로 주 $200~250에 가격대가 형성돼있다. 그리고 2주치 보증금을 한번에 내야 하므로 약 $750이 한번에 사라진다고 생각해야한다. 백패커스는 매우 비싸기 때문에 최대한 빨리 숙소를 구해야한다. 호주 쉐어 하우스 가격을 보고 처음에는 비싸다 생각했다. 그런데 백패커스 가격 보니까 혜자다.</p> <p>백패커스 사이트 모음 : https://secret-rabbithole.tistory.com/4</p> <h2 id="해결방안">해결방안</h2> <p>비용 문제 해결 방법은 두 가지다. 첫 번째는 돈을 버는 것이고, 두 번째는 돈을 아끼는 것이다. 호주의 최저시급은 $24.01 이다. 주세가 $250이라면 11시간은 일해야 주세에서 손실이 없다. 나는 한국에서 자취를 했고 요리를 해먹기 때문에 외식을 적게 할 자신이 있다. 생활비는 주에 $200로 잡는다. 주세와 생활비 합은 $450으로, 최저시급으로 19시간 일하면 적자없이 살 수 있다. 여기서 여유를 좀 가지려면 주 25~30 시간정도는 일을 해야할 것 같다.</p>]]></content><author><name></name></author><category term="working_holiday"/><category term="formatting"/><category term="links"/><summary type="html"><![CDATA[워킹홀리데이, 이유와 목표]]></summary></entry></feed>